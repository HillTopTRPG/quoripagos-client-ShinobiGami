$header-height: 52px;
$menu-gap: 8px;
$menu-padding: 8px;
$menu-item-min-height: 32px;
$menu-item-max-height: 64px;
$menu-back-color: #f7f7f7;
$dice-size: 10vmin;

@mixin position-full-size($position: absolute, $offset: 0) {
  position: $position;
  top: $offset;
  left: $offset;
  bottom: $offset;
  right: $offset;
}

@mixin deep($selecter: "") {
  :deep(#{ $selecter }) {
    @content;
  }
}

@mixin flex-box(
  $direction: row,
  $horizontal: null,
  $vertical: null,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: if($direction == row, $horizontal, $vertical);
  align-items: if($direction == row, $vertical, $horizontal);
  flex-wrap: $wrap;
}

@mixin inline-flex-box(
  $direction: row,
  $horizontal: null,
  $vertical: null,
  $wrap: nowrap
) {
  display: inline-flex;
  flex-direction: $direction;
  justify-content: if($direction == row, $horizontal, $vertical);
  align-items: if($direction == row, $vertical, $horizontal);
  flex-wrap: $wrap;
}

@mixin volume-control() {
  @include flex-box(row, flex-start, center);

  &.mute input[type="range"]::-webkit-slider-thumb {
    border-color: #ffdae7;
  }

  input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    background-color: #ffdae7;
    height: 2px;
    width: 13em;
    border-radius: 6px;

    &:focus,
    &:active {
      outline: none;
    }

    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      cursor: pointer;
      position: relative;
      width: 1rem;
      height: 1rem;
      display: block;
      border: 2px solid #fb5986;
      background-color: #fff;
      border-radius: 50%;
      -webkit-border-radius: 50%;
    }
  }

  .use-volume {
    width: 2.5em;
    text-align: center;
  }

  .mute-control {
    input[type="checkbox"] {
      display: none;
    }
    .foreground {
      @include flex-box(row, flex-start, center);
      gap: 0.2rem;
      border: 1px solid gray;
      border-radius: 0.5rem;
      padding: 0.3rem;
      user-select: none;
      cursor: pointer;

      &:after {
        content: '';
        width: 1em;
      }
    }

    input:checked + .foreground {
      &:after {
        content: '✔︎';
      }
    }
  }
}

.cut-in {
  .swal2-content {
    white-space: pre-wrap;
  }
}

//// 変数の定義
//// min-width
//$breakpoint-up: (
//  'sm': 'screen and (min-width: 400px)',
//  'md': 'screen and (min-width: 768px)',
//  'lg': 'screen and (min-width: 1000px)',
//  'xl': 'screen and (min-width: 1200px)',
//) !default;
//
//// max-width
//$breakpoint-down: (
//        'sm': 'screen and (max-width: 399px)',
//        'md': 'screen and (max-width: 767px)',
//        'lg': 'screen and (max-width: 999px)',
//        'xl': 'screen and (max-width: 1199px)',
//) !default;
//
//// @mixinの定義
//@mixin mq-up($breakpoint: md) {
//  @media #{map-get($breakpoint-up, $breakpoint)} {
//    @content;
//  }
//}
//
//@mixin mq-down($breakpoint: md) {
//  @media #{map-get($breakpoint-down, $breakpoint)} {
//    @content;
//  }
//}
